<동적 메모리>
    : 동적 메모리는 메모리가 언제 할당되고 해체될지, 얼마만큼 할당될지가 실행 시간에 결정된다.
    : 프로그래머가 원하는 시점에 메모리를 할당하고, 원하는 시점에 해체 할 수 있음

<필요성>
-꼭 필요한 만큼 크기를 지정해서 메모리를 할당할 수 있다. 그리고 동적 메모리는 메모리의 할당과 해제 시점을 프로그래머가
 마음대로 정할 수 있음

<동적 메모리의 할당>
-malloc 함수 사용함. <stdlib.h>를 소스파일에 포함함
- malloc 함수는 size 바이트만큼 동적 메모리를 할당하고 할당된 메모리의 주소를 리턴함
- 동적 메모리를 가리키는 포인터 배열처럼 사용 가능

<해체>
- 사용이 끝나면 반드시 명시적으로 해제해야 함
- 동적 메모리를 해제한 다음에는 동적 메모리를 가리키던 포인터를 널 포인터로 만드는 것이 안전
ex) free(arr);
    arr = NULL;

- 동적 메모리를 할당할 떄는 해제되어야 하는 시점을 판단해서 해제 코드를 함께 작성하는 것이 좋음

<사용 순서>
    1. 동적 메모리의 주소를 저장할 포인터 준비
        ex) int* arr = NULL;
    2. 할당시 malloc 함수 사용. malloc 함수의 인자로는 할당할 메모리의 바이트 크기 지정
        ex) arr = (int*)malloc(sizeof(int)* size);
    3. 동적 메모리를 사용할 떄는 배열의 원소를 가리키는 포인터처럼 사용함
        ex) for(i=0; i<size; i++)
            scanf("%d", &arr[i]);
    4. 동적 메모리는 사용이 끝나면 free함수로 해제함.
        ex) free(arr);
            arr = NULL;